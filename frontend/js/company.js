// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
let currentCompany = null;

document.addEventListener('DOMContentLoaded', function() {
    loadCompany();
    setupRatingInput();
    setupReviewForm();
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
async function loadCompany() {
    try {
        const urlParams = new URLSearchParams(window.location.search);
        const companyId = urlParams.get('id');
        
        if (!companyId) {
            showError('ID –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω');
            return;
        }
        
        const company = await api.getCompany(companyId);
        currentCompany = company;
        displayCompany(company);
        hideLoading();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏:', error);
        showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ: ' + error.message);
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
function displayCompany(company) {
    // –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
    document.getElementById('companyName').textContent = company.name;
    document.getElementById('companyBreadcrumb').textContent = company.name;
    document.title = `${company.name} | –í–ü | –í—Å–µ –ø–æ—Ç–æ–ª–æ—á–Ω—ã–µ`;
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ –≥–æ—Ä–æ–¥
    document.getElementById('companyCategory').textContent = company.category;
    document.getElementById('companyCity').textContent = company.city;
    
    // –õ–æ–≥–æ—Ç–∏–ø
    const logoContainer = document.getElementById('companyLogo');
    if (company.logo) {
        logoContainer.innerHTML = `
            <img src="${company.logo}" class="img-fluid rounded" alt="${company.name}" style="max-width: 200px;">
        `;
    } else {
        logoContainer.innerHTML = `
            <div class="bg-light rounded d-flex align-items-center justify-content-center" style="width: 200px; height: 200px; margin: 0 auto;">
                <i class="fas fa-building fa-3x text-muted"></i>
            </div>
        `;
    }
    
    // –†–µ–π—Ç–∏–Ω–≥
    document.getElementById('companyRating').innerHTML = formatRating(company.rating);
    document.getElementById('companyReviewCount').textContent = `(${company.review_count} –æ—Ç–∑—ã–≤–æ–≤)`;
    
    // –ö–æ–Ω—Ç–∞–∫—Ç—ã
    const contactsContainer = document.getElementById('companyContacts');
    let contactsHTML = '';
    
    if (company.address) {
        contactsHTML += `
            <div class="mb-2">
                <i class="fas fa-map-marker-alt text-muted me-2"></i>
                <strong>–ê–¥—Ä–µ—Å:</strong> ${company.address}
            </div>
        `;
    }
    
    if (company.phone) {
        contactsHTML += `
            <div class="mb-2">
                <i class="fas fa-phone text-muted me-2"></i>
                <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> 
                <a href="tel:${company.phone}">${company.phone}</a>
            </div>
        `;
    }
    
    if (company.website) {
        contactsHTML += `
            <div class="mb-2">
                <i class="fas fa-globe text-muted me-2"></i>
                <strong>–°–∞–π—Ç:</strong> 
                <a href="${company.website}" target="_blank">${company.website}</a>
            </div>
        `;
    }
    
    contactsContainer.innerHTML = contactsHTML || '<p class="text-muted">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞</p>';
    
    // –û–ø–∏—Å–∞–Ω–∏–µ
    const descriptionContainer = document.getElementById('companyDescription');
    if (company.description) {
        descriptionContainer.innerHTML = `
            <h5>–û –∫–æ–º–ø–∞–Ω–∏–∏</h5>
            <p>${company.description}</p>
        `;
    } else {
        descriptionContainer.innerHTML = `
            <h5>–û –∫–æ–º–ø–∞–Ω–∏–∏</h5>
            <p class="text-muted">–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ</p>
        `;
    }
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    document.getElementById('totalReviews').textContent = company.review_count;
    document.getElementById('averageRating').textContent = company.rating.toFixed(1);
    
    // –û—Ç–∑—ã–≤—ã
    displayReviews(company.reviews);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    document.getElementById('companyCard').style.display = 'block';
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
function displayReviews(reviews) {
    const reviewsContainer = document.getElementById('reviewsList');
    
    if (reviews.length === 0) {
        reviewsContainer.innerHTML = `
            <div class="empty-state">
                <i class="fas fa-star"></i>
                <h4>–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤</h4>
                <p>–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –æ—Ç–∑—ã–≤ –æ–± —ç—Ç–æ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ</p>
            </div>
        `;
        return;
    }
    
    reviewsContainer.innerHTML = reviews.map(review => `
        <div class="review-card p-3 mb-3">
            <div class="d-flex justify-content-between align-items-start mb-2">
                <div>
                    <strong>${review.author.name}</strong>
                    <div class="rating">${formatRating(review.rating)}</div>
                </div>
                <small class="text-muted">${formatDate(review.created_at)}</small>
            </div>
            <p class="mb-2">${review.text}</p>
            ${review.photos && review.photos.length > 0 ? `
                <div class="review-photos">
                    ${review.photos.map(photo => `
                        <img src="${photo}" class="review-photo" alt="–§–æ—Ç–æ –æ—Ç–∑—ã–≤–∞" onclick="openPhotoModal('${photo}')">
                    `).join('')}
                </div>
            ` : ''}
        </div>
    `).join('');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
function setupRatingInput() {
    const ratingInputs = document.querySelectorAll('.rating-input');
    ratingInputs.forEach(ratingInput => {
        const stars = ratingInput.querySelectorAll('i');
        let selectedRating = 0;
        
        stars.forEach((star, index) => {
            star.addEventListener('click', function() {
                selectedRating = index + 1;
                updateRatingDisplay(stars, selectedRating);
            });
            
            star.addEventListener('mouseenter', function() {
                updateRatingDisplay(stars, index + 1);
            });
        });
        
        ratingInput.addEventListener('mouseleave', function() {
            updateRatingDisplay(stars, selectedRating);
        });
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
function updateRatingDisplay(stars, rating) {
    stars.forEach((star, index) => {
        if (index < rating) {
            star.classList.add('active');
        } else {
            star.classList.remove('active');
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞
function setupReviewForm() {
    const reviewForm = document.getElementById('reviewForm');
    if (!reviewForm) return;
    
    reviewForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const activeStars = document.querySelectorAll('.rating-input .active');
        const rating = activeStars.length;
        const text = document.getElementById('reviewText').value.trim();
        const photos = document.getElementById('reviewPhotos').files;
        
        if (!rating) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É');
            return;
        }
        
        if (!text) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤');
            return;
        }
        
        try {
            const reviewData = {
                company_id: currentCompany.id,
                rating: parseInt(rating),
                text: text
            };
            
            console.log('üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–∞:', reviewData);
            console.log('üè¢ –¢–µ–∫—É—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è:', currentCompany);
            
            // TODO: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            if (photos.length > 0) {
                reviewData.photos = []; // –ü–æ–∫–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫–∞–ø—á–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞)
            if (!auth.isAuthenticated()) {
                const anonymousName = document.getElementById('anonymousName')?.value.trim();
                if (!anonymousName) {
                    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
                    return;
                }
                
                reviewData.anonymous_name = anonymousName;
                console.log('üîí –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {anonymous_name: anonymousName});
            }
            
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', reviewData);
            await api.createReview(reviewData);
            
            showNotification('–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
            
            const modal = bootstrap.Modal.getInstance(document.getElementById('reviewModal'));
            modal.hide();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏
            loadCompany();
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞: ' + error.message);
        }
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–∞
function openReviewModal() {
    const modal = new bootstrap.Modal(document.getElementById('reviewModal'));
    modal.show();
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–º–ø–∞–Ω–∏–µ–π
function shareCompany() {
    if (navigator.share) {
        navigator.share({
            title: currentCompany.name,
            text: `–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: ${currentCompany.name}`,
            url: window.location.href
        });
    } else {
        // –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        navigator.clipboard.writeText(window.location.href).then(() => {
            showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
        });
    }
}

// –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫–æ–º–ø–∞–Ω–∏—é
function reportCompany() {
    const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã:');
    if (reason) {
        // TODO: –û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        showNotification('–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!', 'info');
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
function openPhotoModal(photoUrl) {
    // TODO: –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    window.open(photoUrl, '_blank');
}

// –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
function showError(message) {
    document.getElementById('errorText').textContent = message;
    document.getElementById('errorMessage').style.display = 'block';
    hideLoading();
}

// –°–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
function hideLoading() {
    document.getElementById('loadingSpinner').style.display = 'none';
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
function formatRating(rating) {
    const stars = Math.round(rating);
    return '‚òÖ'.repeat(stars) + '‚òÜ'.repeat(5 - stars);
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.top = '20px';
    alertDiv.style.right = '20px';
    alertDiv.style.zIndex = '9999';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(alertDiv);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}
